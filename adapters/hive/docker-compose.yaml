services:
  mariadb:
    image: arm64v8/mariadb:10.5
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: metastore
      MYSQL_USER: hive
      MYSQL_PASSWORD: hivepassword
    volumes:
      - ./mariadb_data:/var/lib/mysql

  hive-metastore:
    image: arm64v8/openjdk:11-jre-slim
    volumes:
      - ./hive_data:/opt/hive
    command: >
      /bin/bash -c "
      apt-get update && apt-get install -y wget &&
      for i in {1..3}; do
        wget -O apache-hive-3.1.3-bin.tar.gz https://archive.apache.org/dist/hive/hive-3.1.3/apache-hive-3.1.3-bin.tar.gz &&
        if tar -tzf apache-hive-3.1.3-bin.tar.gz &> /dev/null; then
          break
        else
          echo 'Download corrupted, retrying...'
          rm apache-hive-3.1.3-bin.tar.gz
        fi
      done &&
      tar -xzf apache-hive-3.1.3-bin.tar.gz -C /opt &&
      mv /opt/apache-hive-3.1.3-bin/* /opt/hive/ &&
      rm -rf /opt/apache-hive-3.1.3-bin &&
      rm apache-hive-3.1.3-bin.tar.gz &&
      wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.28/mysql-connector-java-8.0.28.jar -O /opt/hive/lib/mysql-connector-java.jar &&
      for i in {1..3}; do
        wget -O hadoop-3.3.6.tar.gz https://archive.apache.org/dist/hadoop/common/hadoop-3.3.6/hadoop-3.3.6.tar.gz &&
        if tar -tzf hadoop-3.3.6.tar.gz &> /dev/null; then
          break
        else
          echo 'Download corrupted, retrying...'
          rm hadoop-3.3.6.tar.gz
        fi
      done &&
      tar -xzf hadoop-3.3.6.tar.gz -C /opt &&
      mv /opt/hadoop-3.3.6 /opt/hadoop &&
      rm hadoop-3.3.6.tar.gz &&
      echo 'export HADOOP_HOME=/opt/hadoop' >> /etc/profile &&
      echo 'export PATH=$PATH:$HADOOP_HOME/bin' >> /etc/profile &&
      source /etc/profile &&
      cp /opt/hadoop/share/hadoop/common/*.jar /opt/hive/lib/ &&
      cp /opt/hadoop/share/hadoop/common/lib/*.jar /opt/hive/lib/ &&
      cp /opt/hadoop/share/hadoop/mapreduce/*.jar /opt/hive/lib/ &&
      cp /opt/hadoop/share/hadoop/mapreduce/lib/*.jar /opt/hive/lib/ &&
      cp /opt/hadoop/share/hadoop/yarn/*.jar /opt/hive/lib/ &&
      cp /opt/hadoop/share/hadoop/yarn/lib/*.jar /opt/hive/lib/ &&
      /opt/hive/bin/schematool -dbType mysql -initSchema &&
      /opt/hive/bin/hive --service metastore
      "
    environment:
      HADOOP_HOME: /opt/hadoop
      HIVE_CONF_javax_jdo_option_ConnectionURL: jdbc:mysql://mariadb/metastore
      HIVE_CONF_javax_jdo_option_ConnectionDriverName: com.mysql.cj.jdbc.Driver
      HIVE_CONF_javax_jdo_option_ConnectionUserName: hive
      HIVE_CONF_javax_jdo_option_ConnectionPassword: hivepassword
    depends_on:
      - mariadb

  hive-server2:
    image: arm64v8/openjdk:11-jre-slim
    ports:
      - "10000:10000"
      - "10002:10002"
    volumes:
      - ./hive_data:/opt/hive
    command: >
      /bin/bash -c "
      apt-get update && apt-get install -y netcat &&
      while ! nc -z hive-metastore 9083; do sleep 1; done &&
      export HADOOP_HOME=/opt/hadoop &&
      export PATH=$PATH:$HADOOP_HOME/bin &&
      /opt/hive/bin/hiveserver2
      "
    environment:
      HADOOP_HOME: /opt/hadoop
      HIVE_CONF_javax_jdo_option_ConnectionURL: jdbc:mysql://mariadb/metastore
      HIVE_CONF_javax_jdo_option_ConnectionDriverName: com.mysql.cj.jdbc.Driver
      HIVE_CONF_javax_jdo_option_ConnectionUserName: hive
      HIVE_CONF_javax_jdo_option_ConnectionPassword: hivepassword
    depends_on:
      - hive-metastore

  beeline:
    image: arm64v8/openjdk:11-jre-slim
    volumes:
      - ./hive_data:/opt/hive
    command: >
      /bin/bash -c "
      apt-get update && apt-get install -y netcat &&
      while ! nc -z hive-server2 10000; do sleep 1; done &&
      echo 'Beeline is ready. You can now use Docker exec to run Beeline commands.'
      tail -f /dev/null
      "
    environment:
      HADOOP_HOME: /opt/hadoop
    depends_on:
      - hive-server2

volumes:
  mariadb_data:
  hive_data: